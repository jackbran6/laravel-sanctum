version: "3"
services:
    #PHP Service
    lst-php:
        build:
            context: .
            dockerfile: .docker/php/Dockerfile
        image: fff.agency/php-laravel
        container_name: lst-php
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: lst-php
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - .docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - lst-network

    #Nginx Service
    lst-web:
        image: nginx:alpine
        container_name: lst-web
        restart: unless-stopped
        tty: true
        ports:
            - "8070:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - .docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - lst-network

    #MySQL Service
    lst-mysql:
        image: mariadb:10.5.8
        container_name: lst-mysql
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_ROOT_PASSWORD: f0rmfunfunc1on!
            SERVICE_TAGS: dev
            SERVICE_NAME: lst-mysql
        volumes:
            - mysqldata:/var/lib/mysql
            - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - lst-network

    lst-redis:
        image: "redis:alpine"
        container_name: lst-redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        volumes:
            - "redisdata:/data"
        networks:
            - lst-network

    lst-mailhog:
        image: "mailhog/mailhog:latest"
        container_name: lst-mailhog
        restart: unless-stopped
        ports:
            - 1025:1025
            - 8025:8025
        networks:
            - lst-network

#Docker Networks
networks:
    lst-network:
        driver: bridge

#Volumes
volumes:
    mysqldata:
        driver: local
    redisdata:
        driver: local
